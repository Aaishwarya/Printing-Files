import java.io.File;
import java.lang.String;

 interface toPrintFiles
    {
        public void printFiles(File f);
        public void printNumOfFiles(File f);
        public void recNumOfFiles(File f);
        public void countTypes(File f);
    }

public class PrintFiles implements toPrintFiles
{
    static String[] TYPES = new String[]{".jpg", ".png", ".gif", ".mp4", ".mp3", ".exe", ".psd", ".html", ".xml"};
    static int len=TYPES.length;
    static int countOfTypes[]=new int[len];
    static long sizeOfTypes[]=new long[len];
    static int recCount=0;
    public static void main(String[] args)
    {
        File f=new File(".");
        PrintFiles obj=new PrintFiles();
        System.out.println("Printing list of files and directories under root directory");
        obj.printFiles(f);
        System.out.println("Printing number of files under each directory");
        obj.printNumOfFiles(f);
        System.out.println("Printing number of files under each directory recursively");
        obj.recNumOfFiles(f);
        System.out.println("Printing number of each type specified");
        obj.countTypes(f);
        System.out.println("Number of files of each specified type:");
        for(int i=0;i<len;i++)
        {
            System.out.println("TYPE "+TYPES[i]+" :"+countOfTypes[i]);
        }
        System.out.println("");
        System.out.println("Size of files of each specified type:");
        for(int i=0;i<len;i++)
        {
            System.out.println("TYPE "+TYPES[i]+" :"+sizeOfTypes[i]);
        }

    }
    public void printFiles(File f)
    {
        System.out.println("Absolute path is " +f.getAbsolutePath());
        if(f.isDirectory())
        {
            File[] paths=f.listFiles();
            int l=paths.length;
            for(int i=0;i<l;i++)
            {
                printFiles(paths[i]);
            }
        }
    }

    public void printNumOfFiles(File f)
    {
        if(f.isDirectory())
        {
            File[] paths=f.listFiles();
            int l=paths.length;
            int count=0;
            for(int i=0;i<l;i++)
            {
                if(paths[i].isDirectory()==false)
                {
                    count++;
                }
            }
            System.out.println(count+" "+f.getAbsolutePath());
            for(int i=0;i<l;i++)
            {
                printNumOfFiles(paths[i]);
            }
        }
        else
        {
            System.out.println("0 "+f.getAbsolutePath());
        }
    }

    public void recNumOfFiles(File f)
    {
        if(f.isDirectory())
        {
            File[] paths=f.listFiles();
            int l=paths.length;
            int count=0;
            for(int i=0;i<l;i++)
            {
                if(paths[i].isDirectory()==false)
                {
                    count++;
                }
            }
            int tCount=countTotalNumOfFiles(f);
            System.out.println(tCount+" "+count+" "+f.getAbsolutePath());
            recCount=0;
            for(int i=0;i<l;i++)
            {
                recNumOfFiles(paths[i]);
            }
        }
        else
        {
            System.out.println("0 "+"0 "+f.getAbsolutePath());
        }
    }

    public int countTotalNumOfFiles(File f)
    {
        if(f.isDirectory())
        {
            File[] paths=f.listFiles();
            int l=paths.length;
            for(int i=0;i<l;i++)
            {
                if(paths[i].isDirectory()==false)
                {
                    recCount++;
                }
                else
                {
                    countTotalNumOfFiles(paths[i]);
                }
            }
        }
        return recCount;
    }
    public void countTypes(File f)
    {
        if(f.isDirectory())
        {
            File[] paths=f.listFiles();
            int l=paths.length;
            for(int i=0;i<l;i++)
            {
                if(paths[i].isDirectory()==false)
                {
                    checkTypes(paths[i]);
                }
                else
                {
                    countTypes(paths[i]);
                }
            }
        }
        else
        {
            checkTypes(f);
        }
    }

    public void checkTypes(File f)
    {
        for(int i=0;i<len;i++)
        {
            if((f.toString()).toLowerCase().endsWith(TYPES[i]))
            {
                countOfTypes[i]++;
                sizeOfTypes[i]=sizeOfTypes[i]+f.getTotalSpace();
            }
        }
    }
}


